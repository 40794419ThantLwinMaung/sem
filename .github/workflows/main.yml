name: Hello World App Workflow
on:
  push:
    branches:
      - master
      - develop

jobs:
  UnitTests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Download external test_db
        run: git clone --depth 1 https://github.com/datacharmer/test_db.git db/test_db

      - name: Run Unit Tests
        run: mvn -Dtest=com.napier.sem.AppTest test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/site/jacoco/jacoco.xml
          flags: UnitTests
          verbose: true

  IntegrationTests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Download external test_db
        run: git clone --depth 1 https://github.com/datacharmer/test_db.git db/test_db

      - name: Integration Tests
        run: |
          docker build -t database ./db
          docker run --name employees -v ${{ github.workspace }}/db/init.sql:/docker-entrypoint-initdb.d/init.sql -e MYSQL_ROOT_PASSWORD=example -dp 33060:3306 database
          mvn -Dtest=com.napier.sem.AppIntegrationTest verify
          docker stop employees
          docker rm employees
          docker image rm database

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/site/jacoco/jacoco.xml
          flags: IntegrationTests
          verbose: true

  BuildAndRelease:
    name: Build, Start docker-compose, Deploy Release, and Copy Reports
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Download external test_db
        run: git clone --depth 1 https://github.com/datacharmer/test_db.git db/test_db

      - name: Package and Start docker-compose
        run: |
          mvn package -DskipTests
          docker compose up -d
          sleep 10

      - name: List files in the container to find reports
        run: |
          CONTAINER_ID=$(docker compose ps -q app)
          echo "Inspecting container $CONTAINER_ID"
          docker exec $CONTAINER_ID ls -al /  # List root directory
          docker exec $CONTAINER_ID ls -al /app  # Check the /app directory

      - name: Get container logs for debugging
        run: |
          CONTAINER_ID=$(docker compose ps -q app)
          echo "Getting logs for container $CONTAINER_ID"
          docker logs $CONTAINER_ID  # Get the logs of the app container

      - name: Copy Output
        run: |
          mkdir -p reports
          CONTAINER_ID=$(docker compose ps -q app)
          echo "Copying reports from container $CONTAINER_ID"
          docker cp $CONTAINER_ID:/app/reports ./reports  # Adjust path if needed

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: reports # The branch the action should deploy to.
          folder: reports # The folder we are copying

      - name: Stop and Remove docker-compose
        run: docker compose down

      - name: Deploy JAR to GitHub Releases
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.PAT_TOKEN }}
          prerelease: false
          automatic_release_tag: latest
          files: ./target/*.jar

